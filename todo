currently the pauseOnCue when the user unpause some time it repause prob cuz of the ratio between the tolerance and the currentTime update speed ??

for pauseOnCue it need to be optomized maybe like this, but this doesnt work very well for now ?
useEffect(() => {
  if(player.current && pauseOnCue && pauseAt) {
    return player.current.subscribe(({ currentTime }) => {
      const now = Date.now();
      if (now - lastUpdateTimeRef.current > 100) {
        lastUpdateTimeRef.current = now;
        const adjustedCurrentTime = currentTime + delay.japanese;
        console.log({
          currentTime: adjustedCurrentTime,
          pauseAt
        })

          if(adjustedCurrentTime >= pauseAt && adjustedCurrentTime < pauseAt + 0.2) {
            player.current?.pause()
          }
        }
    });
  }
}, [pauseAt, currentTime, delay.japanese])

ability to set a count down before unpausing the video after we paused it cuz of pauseOnCue

later add a protips page or something to show tips like the ctrl + c copy the current cue text !!
or basically a hotkeys instructions when we add the rest (if there is)

begin where you left off > save where the user ended last time they watched a certain episode
prob not that important tho 
-> maybe the best way to implement this is to save watched episode an a history table and each video with its own how much the user have seen of it

subtitles sometime take quite a bit of time before being addded to jimaku
so in that case give a warning to the user and stop the hook before the give an error

tansalte words on hover instead of onClick setting

add the ability to disable auto scroll to the current cue and the ability to customize the countdown when the user is scrolling before it returns to the current cue

maybe slowdown video speed when a dialogue is being spoken ??

update the skeletons for general settings and subtitle styles since you chagned the content

hooks for other settings too

hide spoilers

watch or info page
> Choose whether to go to the info page or watch page when selecting an anime.

maybe on the info page if its an anime of 1episodes just fetch it right away

auto add to list

so when we log as anon we should invalidate the session query a7a

dialog z-index > toast z-index => bad UX 
i suppose it can be fixed using createPortal from react

use cache for session which are being fetched from the server ??

input validation/sanitization 

check turoborepo

check if memoizing subtitle cue solve the performance issue on vivaldi

implement caching for the mapper

episodes metadata for the episode selector

for schedules dont use anilist its based on japanese tv

preview subtitle for when the settings change (not important)